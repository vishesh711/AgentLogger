version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - agentlogger-network
    environment:
      - VITE_API_BASE_URL=/api/v1

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/agentlogger
      - GROQ_API_KEY=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
      - GROQ_MODEL=llama3-70b-8192
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - agentlogger-network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=agentlogger
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - agentlogger-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  agentlogger-network:
    driver: bridge

volumes:
  postgres_data: 